/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ShortInterface extends ethers.utils.Interface {
  functions: {
    "changeCreator(bytes32,address)": FunctionFragment;
    "convert(bytes32)": FunctionFragment;
    "create(bytes32,uint256,address,address,string)": FunctionFragment;
    "owner()": FunctionFragment;
    "shortCounter()": FunctionFragment;
    "shortIds(bytes32)": FunctionFragment;
    "update(bytes32,uint256,address,address,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "changeCreator",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(functionFragment: "convert", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "create",
    values: [BytesLike, BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "shortCounter",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "shortIds", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "update",
    values: [BytesLike, BigNumberish, string, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "changeCreator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "convert", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "create", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "shortCounter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "shortIds", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "update", data: BytesLike): Result;

  events: {};
}

export class Short extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ShortInterface;

  functions: {
    changeCreator(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "changeCreator(bytes32,address)"(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    convert(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string] & {
        amount: BigNumber;
        to: string;
        token: string;
        description: string;
      }
    >;

    "convert(bytes32)"(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string] & {
        amount: BigNumber;
        to: string;
        token: string;
        description: string;
      }
    >;

    create(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "create(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    shortCounter(overrides?: CallOverrides): Promise<[BigNumber]>;

    "shortCounter()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    shortIds(arg0: BytesLike, overrides?: CallOverrides): Promise<[BigNumber]>;

    "shortIds(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    update(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "update(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  changeCreator(
    _short: BytesLike,
    _newCreator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "changeCreator(bytes32,address)"(
    _short: BytesLike,
    _newCreator: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  convert(
    _short: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string, string] & {
      amount: BigNumber;
      to: string;
      token: string;
      description: string;
    }
  >;

  "convert(bytes32)"(
    _short: BytesLike,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, string, string] & {
      amount: BigNumber;
      to: string;
      token: string;
      description: string;
    }
  >;

  create(
    _short: BytesLike,
    _amount: BigNumberish,
    _to: string,
    _token: string,
    _description: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "create(bytes32,uint256,address,address,string)"(
    _short: BytesLike,
    _amount: BigNumberish,
    _to: string,
    _token: string,
    _description: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  shortCounter(overrides?: CallOverrides): Promise<BigNumber>;

  "shortCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

  shortIds(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "shortIds(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  update(
    _short: BytesLike,
    _amount: BigNumberish,
    _to: string,
    _token: string,
    _description: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "update(bytes32,uint256,address,address,string)"(
    _short: BytesLike,
    _amount: BigNumberish,
    _to: string,
    _token: string,
    _description: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    changeCreator(
      _short: BytesLike,
      _newCreator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "changeCreator(bytes32,address)"(
      _short: BytesLike,
      _newCreator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    convert(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string] & {
        amount: BigNumber;
        to: string;
        token: string;
        description: string;
      }
    >;

    "convert(bytes32)"(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, string, string] & {
        amount: BigNumber;
        to: string;
        token: string;
        description: string;
      }
    >;

    create(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "create(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    shortCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "shortCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    shortIds(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "shortIds(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    update(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "update(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    changeCreator(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "changeCreator(bytes32,address)"(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    convert(_short: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "convert(bytes32)"(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    create(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "create(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    shortCounter(overrides?: CallOverrides): Promise<BigNumber>;

    "shortCounter()"(overrides?: CallOverrides): Promise<BigNumber>;

    shortIds(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "shortIds(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    update(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "update(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    changeCreator(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "changeCreator(bytes32,address)"(
      _short: BytesLike,
      _newCreator: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    convert(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "convert(bytes32)"(
      _short: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    create(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "create(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    shortCounter(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "shortCounter()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    shortIds(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "shortIds(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    update(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "update(bytes32,uint256,address,address,string)"(
      _short: BytesLike,
      _amount: BigNumberish,
      _to: string,
      _token: string,
      _description: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
